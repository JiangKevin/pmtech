import "../tools/pmbuild_ext/pmbuild_init.jsn"
{	
	//
	// common
	//
	
	jsn_vars: {
		pmbuild_dir: "../third_party/pmbuild"
		pmtech_dir: ".."
	}
	
	base:
	{
		jsn_vars: {
			data_dir: ""
			build_dir: ""
			bin_dir: ""
        }
        
		clean: {
			directories: [
				"${data_dir}"
				"${build_dir}"
				"${bin_dir}"
				"temp"
            ]
        }
        
		render_configs: {
			type: jsn
			args: [
				"-i %{input_file} -o %{output_file}"
				"-I ../assets/configs assets/configs",
			]
			files: [
				["assets/configs", "${data_dir}/configs"]
				["../assets/configs", "${data_dir}/configs"]
			]
			dependencies: true
        }
        
        base_copy: {
        	type: copy
        	files: [
        		["assets/audio", "${data_dir}/audio"]
        		["assets/scene", "${data_dir}/scene"]
            	["../assets/fonts", "${data_dir}/fonts"]
            	["assets/textures/**/*.pmv", "${data_dir}/textures"]
            	["assets/textures/**/*.dds", "${data_dir}/textures"]
            	["../assets/textures/**/*.dds", "${data_dir}/textures"]
            ]
        }
        
        texturec: {
			args: [
				"-f %{input_file}"
				"%{export_args}"
				"-o %{output_file}"
			]
			files: [
            	["assets/textures", "${data_dir}/textures"]
            	["../assets/textures", "${data_dir}/textures"]
        	]
			excludes: [
				"export.jsn"
				"*.txt"
				"*.DS_Store"
				"*.dds"
				"*.pmv"
			]
			change_ext: ".dds"
			dependencies: true
        }
        
        models: {
        	files: [
        		["assets/mesh", "${data_dir}/models"]
        	]
        }
        
        pmbuild_config: {
        	pmbuild_cmd: "${pmbuild_dir}/pmbuild"
        	destination: "${data_dir}"
        }
	}
	
	//
	// mac
	//
	
	mac(base):
	{
		jsn_vars: {
			data_dir: "bin/osx/data"
			build_dir: "build/osx"
			bin_dir: "bin/osx"
		}
		
		premake: {
			args: [
            	"xcode4"
            	"--renderer=metal"
            	"--platform_dir=osx"
			]
		}
		
		pmfx: {
			args: [
				"-shader_platform metal",
				"-metal_sdk macosx",
				"-i assets/shaders ../assets/shaders",
				"-o bin/osx/data/pmfx/metal",
				"-h shader_structs",
				"-t temp/shaders",
				"-source"
            ]
        }
        
        shared_libs: {
        	type: copy
        	files: [
        		["../third_party/shared_libs/osx", "bin/osx"]
        	]
        }
        
        make: {
        	toolchain: "xcodebuild"
        	workspace: "pmtech_examples_osx.xcworkspace"
			files: [
				"build/osx/**/*.xcodeproj"
			]
			change_ext: ""
        }
        
        launch: {
        	cmd: "%{target_path}/Contents/MacOS/%{target_name}",
			files: [
				"bin/osx/**/*.app"
			]
        }
        
        libs: {
        	type: shell
        	explicit: true
        	commands: [
        		"cd ../third_party && ../pmbuild bullet-mac"
        		"cd ../third_party && ../pmbuild make bullet-mac all -configuration Release -quiet"
        		"cd ../third_party && ../pmbuild make bullet-mac all -configuration Debug -quiet"
        	]
        }
	}
	
	mac-gl(mac): {
		premake: {
			args: [
            	"xcode4"
            	"--renderer=opengl"
            	"--platform_dir=osx"
			]
		}
		
		pmfx: {
			args: [
				"-shader_platform glsl"
				"-shader_version 330"
				"-i assets/shaders ../assets/shaders"
				"-o bin/osx/data/pmfx/glsl"
				"-h shader_structs"
				"-t temp/shaders"
				"-source"
				"-v_flip"
            ]
        }
    }
    
    //
    // win32
    //
	
	win32(base):
	{
		jsn_vars: {
			data_dir: "bin/win32/data"
			build_dir: "build/win32"
			bin_dir: "bin/win32"
		}
		
		libs: {
        	type: shell
        	explicit: true
        	commands: [
        		"cd ..\\third_party && ..\\pmbuild bullet-win32"
        		"cd ..\\third_party && ..\\pmbuild make bullet-win32 all /p:Platform=x64 /p:Configuration=Debug"
        		"cd ..\\third_party && ..\\pmbuild make bullet-win32 all /p:Platform=x64 /p:Configuration=Release"
        	]
        }
		
		shared_libs: {
        	type: copy
        	files: [
        		["../third_party/shared_libs/win32", "bin/win32"]
        	]
        }
		
		premake: {
			args: [
				"%{vs_latest}"
				"--renderer=dx11"
				"--platform_dir=win32"
				"--sdk_version=%{windows_sdk_version}"
			]
        },
        
		pmfx: {
			args: [
				"-shader_platform hlsl"
				"-shader_version 5_0"
				"-i assets/shaders ../assets/shaders"
				"-o bin/win32/data/pmfx/hlsl"
				"-h shader_structs"
				"-t temp/shaders"
				"-source"
			]
		}
		
		make: {
			toolchain: "msbuild"
			files: [
				"build/win32/*.vcxproj"
			]
		}
		
		launch: {
			cmd: "%{target_path}"
			files: [
				"bin/win32/*.exe"
			]
		}
	}
	
	win32-vulkan(win32): 
	{
		premake: {
			args: [
				"%{vs_latest}"
				"--renderer=vulkan"
				"--platform_dir=win32"
				"--sdk_version=%{windows_sdk_version}"
			]
        },
        
		pmfx: {
			args: [
				"-shader_platform spirv"
				"-shader_version 420"
				"-i assets/shaders ../assets/shaders"
				"-o bin/win32/data/pmfx/spirv"
				"-h shader_structs"
				"-t temp/shaders"
			]
		}
    }
    
    win32-gl(win32): 
    {
    	premake: {
			args: [
				"%{vs_latest}"
				"--renderer=opengl"
				"--platform_dir=win32"
				"--sdk_version=%{windows_sdk_version}"
			]
        },
        
		pmfx: {
			args: [
				"-shader_platform glsl"
				"-shader_version 420"
				"-i assets/shaders ../assets/shaders"
				"-o bin/win32/data/pmfx/glsl"
				"-h shader_structs"
				"-t temp/shaders"
				"-source"
				"-v_flip"
			]
		}
    }
	
	//
	// iOS
	//
	
	ios(base): 
	{
        jsn_vars: {
            data_dir: "bin/ios/data"
			build_dir: "build/ios"
			bin_dir: "bin/ios"
        }

		premake: {
			args: [
				"xcode4"
				"--renderer=metal"
				"--platform_dir=ios"
				"--xcode_target=ios"
				"--teamid=%{teamid}"
			]
		}
		
		pmfx: {
			args: [
				"-shader_platform metal"
				"-metal_sdk iphoneos"
				"-i assets/shaders ../assets/shaders"
				"-o bin/ios/data/pmfx/metal"
				"-h shader_structs"
				"-t temp/shaders"
				"-source"
            ]
        }
        
        libs: {
        	type: shell
        	explicit: true
        	commands: [
        		"cd ../third_party && ../pmbuild bullet-ios"
        		"cd ../third_party && ../pmbuild make bullet-ios all -destination generic/platform=iOS -configuration Release -quiet"
        		"cd ../third_party && ../pmbuild make bullet-ios all -destination generic/platform=iOS -configuration Debug -quiet"
        	]
        }
        
        make: {
        	toolchain: "xcodebuild"
        	workspace: "pmtech_examples_ios.xcworkspace"
        	change_ext: ""
			files: [
				"build/ios/**/*.xcodeproj"
			]
        }
    }
    
    ios-ci(ios):
    {
    	premake: {
			args: [
				"xcode4"
				"--renderer=metal"
				"--platform_dir=ios"
				"--xcode_target=ios"
			]
		}
    }
    
    //
    // linux
    //
    
    linux(base): 
    {
		jsn_vars: {
            data_dir: "bin/linux/data"
			build_dir: "build/linux"
			bin_dir: "bin/linux"
        }
        
        libs: {
        	type: shell
        	explicit: true
        	commands: [
        		"cd ../third_party && ../pmbuild bullet-linux"
        		"cd ../third_party && ../pmbuild make bullet-linux all config=release"
        		"cd ../third_party && ../pmbuild make bullet-linux all config=debug"
        	]
        }
        
        premake: {
			args: [
				"gmake"
				"--renderer=opengl"
				"--platform_dir=linux"
			]
		}
		
		pmfx: {
			args: [
				"-shader_platform glsl"
				"-shader_version 450"
				"-i assets/shaders ../assets/shaders"
				"-o bin/linux/data/pmfx/glsl"
				"-h shader_structs"
				"-t temp/shaders"
				"-v_flip"
				"-source"
            ]
        }
        
        make: {
        	toolchain: "make",
			files: [
				"build/linux/*.make"
			]
			change_ext: ""
        }
    }

    linux-vulkan(linux): 
    {
		premake: {
			args: [
				"gmake"
				"--renderer=vulkan"
				"--platform_dir=linux"
			]
		}

		pmfx: {
			args: [
				"-shader_platform spirv"
				"-shader_version 450"
				"-i assets/shaders ../assets/shaders"
				"-o bin/linux/data/pmfx/spirv"
				"-h shader_structs"
				"-t temp/shaders"
				"-source"
			]
		}
    }
    
    //
    // web
    //
    
    web(base): 
    {
		jsn_vars: {
            data_dir: "build/web/data"
			build_dir: "build/web"
			bin_dir: "bin/web"
        }
		
        libs: {
        	type: shell
        	explicit: true
        	commands: [
        		"cd ../third_party && ../pmbuild bullet-web"
        		"cd ../third_party && ../pmbuild make bullet-web all config=release"
        		"cd ../third_party && ../pmbuild make bullet-web all config=debug"
        	]
        }
        
        premake: {
			args: [
				"gmake"
				"--renderer=opengl"
				"--platform_dir=web"
				"--pmtech_dir=../"
			]
		}

		pmfx: {
			args: [
            	"-shader_platform gles"
            	"-shader_version 300"
            	"-i assets/shaders ../assets/shaders"
            	"-o build/web/data/pmfx/glsl"
            	"-h shader_structs"
            	"-t temp/shaders"
            	"-v_flip"
            	"-source"
			]
		}

        make: {
        	toolchain: "emmake",
			files: [
				"build/web/*.make"
			]
			change_ext: ""
        }
        
        launch: {
			cmd: "%{target_name}.html",
			files:[
				"bin/web/*.html"
			]
			ext: ".html"
        }
    }
    
    //
    // android
    //
    
    android(base): 
    {
    	jsn_vars: {
            data_dir: "bin/android/data"
			build_dir: "build/android"
			bin_dir: "bin/android"
        }
        
    	premake: {
			args: [
				"android-studio"
				"--renderer=opengl"
				"--platform_dir=android"
				"--pmtech_dir=../"
			]
		}
		pmfx: {
			args: [
            	"-shader_platform gles"
            	"-shader_version 300"
            	"-i assets/shaders ../assets/shaders"
            	"-o build/web/data/pmfx/glsl"
            	"-h shader_structs"
            	"-t temp/shaders"
            	"-v_flip"
            	"-source"
			]
		}
    }
    
}