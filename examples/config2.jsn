{
	jsn_vars: {
		pmbuild_dir: "../../pmbuild"
	}
        
	tools<mac>: {
		jsn: "${pmbuild_dir}/scripts/jsn/jsn"
		premake: "${pmbuild_dir}/bin/premake5"
		texturec: "${pmbuild_dir}/bin/texturec"
		pmfx: "python3 ${pmbuild_dir}/scripts/pmfx-shader/build_pmfx.py"
		build_models: "../tools/build_scripts/build_models.py"
	}
	
	extensions: {
		models:
		{
			search_path: "../tools/pmbuild_ext"
			module: "pmbuild_ext"
			function: "run_models"
		}
	}
	
	base:
	{
		jsn_vars: {
			data_dir: ""
			build_dir: ""
			bin_dir: ""
        }
        
		clean: {
			directories: [
				"${data_dir}"
				"${build_dir}"
				"${bin_dir}"
				"temp"
            ]
        },
        
		render_configs: {
			type: jsn
			args: [
				"-i %{input_file} -o %{output_file}"
				"-I ../assets/configs assets/configs",
			]
			files: [
				["assets/configs", "${data_dir}/configs"]
				["../assets/configs", "${data_dir}/configs"]
			]
			dependencies: true
        }
        
        base_copy: {
        	type: copy
        	files: [
        		["assets/audio", "${data_dir}/audio"]
        		["assets/scene", "${data_dir}/scene"]
            	["../assets/fonts", "${data_dir}/fonts"]
            	["assets/textures/**/*.pmv", "${data_dir}/textures"]
            	["assets/textures/**/*.dds", "${data_dir}/textures"]
            ]
        }
        
        texturec: {
			args: [
				"-f %{input_file}"
				"%{export_args}"
				"-o %{output_file}"
			]
			files: [
            	["assets/textures", "${data_dir}/textures"]
            	["../assets/textures", "${data_dir}/textures"]
        	]
			excludes: [
				"export.jsn"
				"*.txt"
				"*.DS_Store"
			]
			change_ext: ".dds"
			dependencies: true
        }
        
        models: {
        	files: [
        		["assets/mesh", "${data_dir}/models"]
        	]
        }
	}
	
	mac(base):
	{
		jsn_vars: {
			data_dir: "bin/osx/data"
			build_dir: "build/osx"
			bin_dir: "bin/osx"
		}
		
		premake: {
			args: [
            	"xcode4"
            	"--renderer=metal"
            	"--platform_dir=osx"
			]
		}
		
		pmfx: {
			args: [
				"-shader_platform metal",
				"-metal_sdk macosx",
				"-i assets/shaders ../assets/shaders",
				"-o bin/osx/data/pmfx/metal",
				"-h shader_structs",
				"-t temp/shaders",
				"-source"
            ]
        }
        
        shared_libs: {
        	type: copy
        	files: [
        		["../third_party/shared_libs/osx", "bin/osx"]
        	]
        }
        
        make: {
        	toolchain: "xcodebuild",
			files: [
				["build/osx/**/*.xcodeproj"]
			]
        }
        
        launch: {
        	cmd: "%{target_path}/Contents/MacOS/%{target_name}",
			files: [
				["bin/osx/**/*.app"]
			]
        }
	}
}