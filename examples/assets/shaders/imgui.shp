cbuffer per_pass_vs : register(b0)
{
	float4x4 projection_matrix;
};

struct vs_input
{
	float2 position 	: POSITION;
	float2 tex_coord	: TEXCOORD0;
	float4 colour		: COLOR0;
};

struct vs_output
{
	float4 position 	: SV_POSITION;
	float4 colour		: TEXCOORD0;
	float2 tex_coord	: TEXCOORD1;
};

struct ps_output
{
	float4 colour : SV_Target;
};

vs_output main( vs_input _input )
{
	vs_output _output;
	
	_output.position = mul( projection_matrix, float4( _input.position.x, _input.position.y, 0.0f, 1.0f ) );
	_output.colour = _input.colour;
	_output.tex_coord = input.tex_coord;
	
    return _output;
}

declare_texture_samplers
{
	TEXTURE_2D( tex, 0 );
};

ps_output main( vs_output _input )
{
	ps_output _output;
	
	_output.colour = _input.colour * SAMPLE_TEXTURE_2D( tex, _input.tex_coord.xy );
				
	return _output;
}
