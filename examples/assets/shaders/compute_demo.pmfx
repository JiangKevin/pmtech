#include "../../../assets/shaders/libs/globals.pmfx"

struct boid
{
    float4 pos;
    float4 vel;
    float4 dir;
};

struct vs_input
{
    float4 position : POSITION;
    float4 normal : TEXCOORD0;
    float4 texcoord : TEXCOORD1;
    float4 tangent : TEXCOORD2;
    float4 bitangent : TEXCOORD3;
};

struct vs_output
{
    float4 position : SV_POSITION;
    float4 world_pos : TEXCOORD0;
    float3 normal : TEXCOORD1;
    float3 tangent : TEXCOORD2;
    float3 bitangent : TEXCOORD3;
    float4 texcoord : TEXCOORD4;
    float4 colour : TEXCOORD5;
};

struct ps_output
{
    float4 colour : SV_Target;
};

shader_resources
{
    texture_2d( diffuse_texture, 0 );
    structured_buffer_rw( boid, rw_boids, 12);
    structured_buffer( boid, read_boids, 13);
};

void cs_main_boids(uint3 gid : SV_DispatchThreadID)
{
    // float4 test = sample_texture(bb, input.texcoord);
}

vs_output vs_main( vs_input input, uint ii : SV_InstanceID, uint vi : SV_VertexID )
{
    vs_output output;
    
    float4 boid_pos = input.position; // + read_boids[ii].pos;
    
    output.position = output.position = mul( boid_pos, vp_matrix );
    
    return output;
}


ps_output ps_constant_colour( vs_output input ) 
{
    ps_output output;    
    output.colour = float4(0.0, 1.0, 0.0, 1.0);
    return output;
}

pmfx:
{    
    "boids_update":
    {
        "supported_platforms":
        {
            "hlsl": ["5_0"],
            "metal": ["all"]
        },
        
        "cs" : "cs_main_boids",
        "threads": [16, 16, 1]
    },
    
    "boids_render":
    {
        "supported_platforms":
        {
            "hlsl": ["5_0"],
            "metal": ["all"]
        },
        
        "vs": "vs_main",
        "ps": "ps_constant_colour"
    }
}



