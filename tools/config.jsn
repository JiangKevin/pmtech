import "../tools/pmbuild_ext/pmbuild_init.jsn"
{
    jsn_vars: {
        pmbuild_dir: "../third_party/pmbuild"
        pmtech_dir: ".."
        data_dir: ""
        bin_dir: ""
        build_dir: ""
        platform: ""
    }
    
    base:
    {
        // 
        clean: {
        	directories: [
        		"${bin_dir}"
        		"${build_dir}"
        	]
        }
    }
    
    //
    // cmdline build of libs for pmbuild dependencies
    //
    
    mac-meshopt(base): {
        premake: {
            args: [
                "gmake"
                "--renderer=metal"
                "--platform_dir=osx"
            ]
        }
        
        shell: {
            commands: [
                "cd build/osx && make mesh_opt config=release"
                "rsync ../third_party/shared_libs/osx/libfmod.dylib bin/osx/"
                "install_name_tool -add_rpath @executable_path/. bin/osx/mesh_opt"
            ]
        }
    },
    
    linux(base): {
        premake: {
            args: [
                "gmake"
                "--renderer=opengl",
                "--platform_dir=linux"
            ]
        }
        shell: {
            commands: [
                "cd build/linux/ && make mesh_opt config=release"
            ]
        }
    }
    
    win32(base): {
        premake: {
            args: [
                "vs2019"
                "--renderer=dx11"
                "--platform_dir=win32"
				"--sdk_version=%{windows_sdk_version}"
            ]
        }
        make: {
            toolchain: "msbuild"
            files: [
                "build/win32/*.vcxproj"
            ]
        }
    }
    
    //
    // tools workspace, pmtech editor, live lib, mesh opt
    //

    data(base): 
    {
        base_copy: {
            type: copy
            files: [
                ["../assets/fonts", "${data_dir}/fonts"]
                ["../assets/textures/**/*.dds", "${data_dir}/textures"]
                ["../third_party/shared_libs/${platform}", "${bin_dir}"]
            ]
        }
        
        texturec: {
            args: [
                "-f %{input_file}"
                "%{export_args}"
                "-o %{output_file}"
            ]
            files: [
                ["../assets/textures", "${data_dir}/textures"]
            ]
            excludes: [
                "export.jsn"
                "*.txt"
                "*.DS_Store"
                "*.dds"
            ]
            change_ext: ".dds"
            dependencies: true
        }
        
        jsn: {
            args: [
                "-i %{input_file} -o %{output_file}"
                "-I ../assets/configs"
            ]
            files:[
                ["../assets/configs", "${data_dir}/configs"]
            ]
            dependencies: true
        }
    }
    
    mac-editor(data): 
    {
        jsn_vars: {
            data_dir: "bin/osx/data"
            bin_dir: "bin/osx"
            build_dir: "build/osx"
            platform: "osx"
        }
        
        premake: {
            args: [
                "xcode4"
                "--renderer=metal"
                "--platform_dir=osx"
            ]
        }
        
        pmfx: {
            args: [
                "-v1"
                "-shader_platform metal"
                "-metal_sdk macosx"
                "-i ../assets/shaders"
                "-o bin/osx/data/pmfx/metal"
                "-h shader_structs"
                "-t temp/shaders"
                "-source"
            ]
        }

        make: {
            toolchain: "xcodebuild"
            workspace: "pmtech_tools_osx.xcworkspace"
            files: [
                "build/osx/**/*.xcodeproj"
            ]
            change_ext: ""
        }

        launch: {
            cmd: "%{target_path}/Contents/MacOS/%{target_name}"
            files: [
                "bin/osx/**/*.app"
            ]
        }
    }
    
    win32-editor(data): 
    {
        jsn_vars: {
            data_dir: "bin/win32/data"
            bin_dir: "bin/win32"
            build_dir: "build/win32"
            platform: "win32"
        }
        
        premake: {
            args: [
                "%{vs_latest}"
                "--renderer=dx11"
                "--platform_dir=win32"
                "--sdk_version=%{windows_sdk_version}"
            ]
        }
        
        pmfx: {
            args: [
                "-v1"
                "-shader_platform hlsl"
                "-shader_version 5_0"
                "-i ../assets/shaders"
                "-o bin/win32/data/pmfx/hlsl"
                "-h shader_structs"
                "-t temp/shaders/hlsl"
                "-source"
            ]
        }

        make: {
            toolchain: "msbuild"
            files: [
                "build/win32/*.vcxproj"
            ]
        }

        launch: {
            cmd: "%{target_path}"
            files: [
                "bin/win32/*.exe"
            ]
        }
    }

    linux-editor(data): 
    {
        jsn_vars: {
            data_dir: "bin/linux/data"
            bin_dir: "bin/linux"
            build_dir: "build/linux"
            platform: "linux"
        }
        
        premake: {
            args: [
                "gmake"
                "--renderer=opengl"
                "--platform_dir=linux"
            ]
        }
        
        pmfx: {
            args: [
                "-v1"
                "-shader_platform glsl"
                "-shader_version 450"
                "-i ../assets/shaders"
                "-o bin/linux/data/pmfx/glsl"
                "-h shader_structs"
                "-t temp/shaders"
                "-source"
            ]
        }

        make: {
            toolchain: "make",
            files: [
                "build/linux/*.make"
            ]
            change_ext: ""
        }

        launch: {
            cmd: "./%{target_path}"
            files: [
                "bin/linux"
            ]
        }

        vscode: {
            files: [
                "build/linux/*.make"
            ]
            folders: [
                "."
                ".."
            ]
            configurations:[
                {
                    name: "debug"
                    make: "../pmbuild make linux-editor %{target_name} config=debug"
                    launch: "bin/linux/%{target_name}_d"
                }
                {
                    name: "release"
                    make: "../pmbuild make linux-editor %{target_name} config=release"
                    launch: "bin/linux/%{target_name}"
                }
            ]
            cwd: "bin/linux"
            debugger: "gdb"
            change_ext: ""
        }
    }
}
